{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/doctorwho/Desktop/redux-robofriends/src/components/CounterButton.js\";\nimport React, { Component } from 'react';\n\nclass CounterButton extends Component {\n  constructor() {\n    super();\n\n    this.updateCount = () => {\n      console.log(this.updateCount);\n      this.setState({\n        count: this.state.count + 1\n      });\n    };\n\n    this.state = {\n      count: 0\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return true;\n  }\n\n  render() {\n    console.log('CounterButton');\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      color: this.props.color,\n      onClick: this.updateCount,\n      children: [\"Count: \", this.state.count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\n;\nexport default CounterButton;","map":{"version":3,"sources":["/home/doctorwho/Desktop/redux-robofriends/src/components/CounterButton.js"],"names":["React","Component","CounterButton","constructor","updateCount","console","log","setState","count","state","shouldComponentUpdate","nextProps","nextState","render","props","color"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,aAAN,SAA4BD,SAA5B,CAAsC;AACpCE,EAAAA,WAAW,GAAG;AACZ;;AADY,SAWdC,WAXc,GAWA,MAAM;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,WAAjB;AACA,WAAKG,QAAL,CAAc;AAAEC,QAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD,KAAX,GAAmB;AAA5B,OAAd;AACD,KAda;;AAEZ,SAAKC,KAAL,GAAa;AACXD,MAAAA,KAAK,EAAE;AADI,KAAb;AAGD;;AAEDE,EAAAA,qBAAqB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AAC1C,WAAO,IAAP;AACD;;AAODC,EAAAA,MAAM,GAAI;AACRR,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,wBACE;AAAQ,MAAA,KAAK,EAAE,KAAKQ,KAAL,CAAWC,KAA1B;AAAiC,MAAA,OAAO,EAAE,KAAKX,WAA/C;AAAA,4BACU,KAAKK,KAAL,CAAWD,KADrB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAxBmC;;AAyBrC;AAED,eAAeN,aAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass CounterButton extends Component {\n  constructor() {\n    super();\n    this.state = {\n      count: 0\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return true;\n  }\n\n  updateCount = () => {\n    console.log(this.updateCount)\n    this.setState({ count: this.state.count + 1})\n  }\n\n  render () {\n    console.log('CounterButton');\n    return (\n      <button color={this.props.color} onClick={this.updateCount}>\n        Count: {this.state.count}\n      </button>\n    );\n  }\n};\n\nexport default CounterButton;"]},"metadata":{},"sourceType":"module"}
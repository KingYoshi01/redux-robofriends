{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/doctorwho/Desktop/redux-robofriends/src/containers/App.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry'; // import { robots } from '../robots';\n\nimport './App.css';\nimport { setSearchField } from '../actions';\n\nconst mapStateToProps = state => {\n  return {\n    searchField: state.searchField\n  };\n};\n\nconst mapDispathToProps = dispatch => {\n  return {\n    onSearchChange: event => dispatch(setSearchField(event.target.value))\n  };\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: []\n    };\n    console.log('constructor');\n  }\n\n  componentDidMount() {\n    console.log(this.props.store.getState());\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => {\n      this.setState({\n        robots: users\n      });\n    });\n  }\n\n  render() {\n    const {\n      robots\n    } = this.state;\n    const {\n      searchField,\n      onSearchChange\n    } = this.props;\n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\n    });\n    return !robots.length ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"f1\",\n      children: \"Loading!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tc\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"f1\",\n        children: \"RoboFriends\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n        searchChange: onSearchChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Scroll, {\n        children: /*#__PURE__*/_jsxDEV(ErrorBoundry, {\n          children: /*#__PURE__*/_jsxDEV(CardList, {\n            robots: filteredRobots\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\n; // once done can run npm run build and will optimize\n// build folder ready for deployment\n\nexport default connect(mapStateToProps, mapDispathToProps)(App);","map":{"version":3,"sources":["/home/doctorwho/Desktop/redux-robofriends/src/containers/App.js"],"names":["React","Component","connect","CardList","SearchBox","Scroll","ErrorBoundry","setSearchField","mapStateToProps","state","searchField","mapDispathToProps","dispatch","onSearchChange","event","target","value","App","constructor","robots","console","log","componentDidMount","props","store","getState","fetch","then","response","json","users","setState","render","filteredRobots","filter","robot","name","toLowerCase","includes","length"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,YAAP,MAAyB,4BAAzB,C,CACA;;AACA,OAAO,WAAP;AACA,SAASC,cAAT,QAA+B,YAA/B;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLC,IAAAA,WAAW,EAAED,KAAK,CAACC;AADd,GAAP;AAGD,CAJD;;AAMA,MAAMC,iBAAiB,GAAIC,QAAD,IAAc;AACtC,SAAO;AACLC,IAAAA,cAAc,EAAGC,KAAD,IAAWF,QAAQ,CAACL,cAAc,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AAD9B,GAAP;AAGD,CAJD;;AAMA,MAAMC,GAAN,SAAkBhB,SAAlB,CAA4B;AAC3BiB,EAAAA,WAAW,GAAE;AACX;AACA,SAAKT,KAAL,GAAa;AACXU,MAAAA,MAAM,EAAE;AADG,KAAb;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBF,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKE,KAAL,CAAWC,KAAX,CAAiBC,QAAjB,EAAZ;AACAC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAGA,QAAQ,CAACC,IAAT,EADnB,EAEGF,IAFH,CAEQG,KAAK,IAAI;AAAC,WAAKC,QAAL,CAAc;AAAEZ,QAAAA,MAAM,EAAEW;AAAV,OAAd;AAAiC,KAFnD;AAGD;;AAEAE,EAAAA,MAAM,GAAG;AACT,UAAM;AAAEb,MAAAA;AAAF,QAAa,KAAKV,KAAxB;AACA,UAAM;AAAEC,MAAAA,WAAF;AAAeG,MAAAA;AAAf,QAAiC,KAAKU,KAA5C;AACA,UAAMU,cAAc,GAAGd,MAAM,CAACe,MAAP,CAAcC,KAAK,IAAI;AAC5C,aAAOA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkC5B,WAAW,CAAC2B,WAAZ,EAAlC,CAAP;AACD,KAFsB,CAAvB;AAIA,WAAO,CAAClB,MAAM,CAACoB,MAAR,gBACL;AAAI,MAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADK,gBAGH;AAAK,MAAA,SAAS,EAAC,IAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAGE,QAAC,SAAD;AAAW,QAAA,YAAY,EAAE1B;AAAzB;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,MAAD;AAAA,+BACE,QAAC,YAAD;AAAA,iCACE,QAAC,QAAD;AAAU,YAAA,MAAM,EAAEoB;AAAlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAeC;;AAtCyB;;AAuC3B,C,CAGD;AACA;;AACA,eAAe/B,OAAO,CAACM,eAAD,EAAkBG,iBAAlB,CAAP,CAA4CM,GAA5C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\n// import { robots } from '../robots';\nimport './App.css';\nimport { setSearchField } from '../actions';\n\nconst mapStateToProps = state => {\n  return {\n    searchField: state.searchField\n  };\n};\n\nconst mapDispathToProps = (dispatch) => {\n  return {\n    onSearchChange: (event) => dispatch(setSearchField(event.target.value))\n  }\n};\n\nclass App extends Component {\n constructor(){\n   super()\n   this.state = {\n     robots: []\n    }\n   console.log('constructor')\n };\n\n componentDidMount() {\n   console.log(this.props.store.getState())\n   fetch('https://jsonplaceholder.typicode.com/users')\n     .then(response=> response.json())\n     .then(users => {this.setState({ robots: users })});\n }\n\n  render() {\n  const { robots } = this.state;\n  const { searchField, onSearchChange }= this.props;\n  const filteredRobots = robots.filter(robot => {\n    return robot.name.toLowerCase().includes(searchField.toLowerCase());\n  });\n  \n  return !robots.length ?\n    <h1 className='f1'>Loading!</h1> :\n    (\n      <div className=\"tc\">\n        <h1 className=\"f1\">RoboFriends</h1>\n        {/* <button onClick={}>Open Console & Click Me!</button> */}\n        <SearchBox searchChange={onSearchChange} />\n        <Scroll>\n          <ErrorBoundry>\n            <CardList robots={filteredRobots} />\n          </ErrorBoundry>\n        </Scroll>\n      </div>\n    );\n\n  }\n};\n\n\n// once done can run npm run build and will optimize\n// build folder ready for deployment\nexport default connect(mapStateToProps, mapDispathToProps)(App);"]},"metadata":{},"sourceType":"module"}
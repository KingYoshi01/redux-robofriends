{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/doctorwho/Desktop/redux-robofriends/src/containers/App.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport Header from '../components/Header'; // import { robots } from '../robots';\n\nimport './App.css';\nimport { requestRobots, setSearchField } from '../actions';\n\nconst mapStateToProps = state => {\n  return {\n    searchField: state.searchRobots.searchField,\n    robots: state.requestRobots.robots,\n    isPending: state.requestRobots.isPending,\n    error: state.requestRobots.error\n  };\n};\n\nconst mapDispathToProps = dispatch => {\n  return {\n    onSearchChange: event => dispatch(setSearchField(event.target.value)),\n    onRequestRobots: () => dispatch(requestRobots())\n  };\n};\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onRequestRobots();\n  }\n\n  render() {\n    const {\n      searchField,\n      onSearchChange,\n      robots,\n      isPending\n    } = this.props;\n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\n    });\n    return isPending ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"f1\",\n      children: \"Loading!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tc\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n        searchChange: onSearchChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Scroll, {\n        children: /*#__PURE__*/_jsxDEV(ErrorBoundry, {\n          children: /*#__PURE__*/_jsxDEV(CardList, {\n            robots: filteredRobots\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\n; // once done can run npm run build and will optimize\n// build folder ready for deployment\n\nexport default connect(mapStateToProps, mapDispathToProps)(App);","map":{"version":3,"sources":["/home/doctorwho/Desktop/redux-robofriends/src/containers/App.js"],"names":["React","Component","connect","CardList","SearchBox","Scroll","ErrorBoundry","Header","requestRobots","setSearchField","mapStateToProps","state","searchField","searchRobots","robots","isPending","error","mapDispathToProps","dispatch","onSearchChange","event","target","value","onRequestRobots","App","componentDidMount","props","render","filteredRobots","filter","robot","name","toLowerCase","includes"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,MAAP,MAAmB,sBAAnB,C,CACA;;AACA,OAAO,WAAP;AACA,SAASC,aAAT,EAAwBC,cAAxB,QAA8C,YAA9C;;AAGA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLC,IAAAA,WAAW,EAAED,KAAK,CAACE,YAAN,CAAmBD,WAD3B;AAELE,IAAAA,MAAM,EAAEH,KAAK,CAACH,aAAN,CAAoBM,MAFvB;AAGLC,IAAAA,SAAS,EAAEJ,KAAK,CAACH,aAAN,CAAoBO,SAH1B;AAILC,IAAAA,KAAK,EAAEL,KAAK,CAACH,aAAN,CAAoBQ;AAJtB,GAAP;AAMD,CAPD;;AASA,MAAMC,iBAAiB,GAAIC,QAAD,IAAc;AACtC,SAAO;AACLC,IAAAA,cAAc,EAAGC,KAAD,IAAWF,QAAQ,CAACT,cAAc,CAACW,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf,CAD9B;AAELC,IAAAA,eAAe,EAAE,MAAML,QAAQ,CAACV,aAAa,EAAd;AAF1B,GAAP;AAID,CALD;;AAOA,MAAMgB,GAAN,SAAkBvB,SAAlB,CAA4B;AAC1BwB,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWH,eAAX;AACD;;AAEDI,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEf,MAAAA,WAAF;AAAeO,MAAAA,cAAf;AAA+BL,MAAAA,MAA/B;AAAuCC,MAAAA;AAAvC,QAAoD,KAAKW,KAA/D;AACA,UAAME,cAAc,GAAGd,MAAM,CAACe,MAAP,CAAcC,KAAK,IAAI;AAC5C,aAAOA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCrB,WAAW,CAACoB,WAAZ,EAAlC,CAAP;AACH,KAFwB,CAAvB;AAIA,WAAOjB,SAAS,gBACd;AAAI,MAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADc,gBAGZ;AAAK,MAAA,SAAS,EAAC,IAAf;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAGE,QAAC,SAAD;AAAW,QAAA,YAAY,EAAEI;AAAzB;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,MAAD;AAAA,+BACE,QAAC,YAAD;AAAA,iCACE,QAAC,QAAD;AAAU,YAAA,MAAM,EAAES;AAAlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAeD;;AA1ByB;;AA2B3B,C,CAGD;AACA;;AACA,eAAe1B,OAAO,CAACQ,eAAD,EAAkBO,iBAAlB,CAAP,CAA4CO,GAA5C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport Header from '../components/Header';\n// import { robots } from '../robots';\nimport './App.css';\nimport { requestRobots, setSearchField } from '../actions';\n\n\nconst mapStateToProps = state => {\n  return {\n    searchField: state.searchRobots.searchField,\n    robots: state.requestRobots.robots,\n    isPending: state.requestRobots.isPending,\n    error: state.requestRobots.error\n  };\n};\n\nconst mapDispathToProps = (dispatch) => {\n  return {\n    onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\n    onRequestRobots: () => dispatch(requestRobots())\n  };\n};\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onRequestRobots();\n  };\n\n  render() {\n    const { searchField, onSearchChange, robots, isPending }= this.props;\n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\n  });\n  \n    return isPending ?\n      <h1 className='f1'>Loading!</h1> :\n      (\n        <div className=\"tc\">\n          <Header />\n          {/* <button onClick={}>Open Console & Click Me!</button> */}\n          <SearchBox searchChange={onSearchChange} />\n          <Scroll>\n            <ErrorBoundry>\n              <CardList robots={filteredRobots} />\n            </ErrorBoundry>\n          </Scroll>\n        </div>\n      );\n\n  }\n};\n\n\n// once done can run npm run build and will optimize\n// build folder ready for deployment\nexport default connect(mapStateToProps, mapDispathToProps)(App);"]},"metadata":{},"sourceType":"module"}
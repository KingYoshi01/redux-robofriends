{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/doctorwho/Desktop/redux-robofriends/src/containers/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry'; // import { robots } from '../robots';\n\nimport './App.css';\n\nfunction App() {\n  _s();\n\n  // constructor(){\n  //   super()\n  //   this.state = {\n  //     robots: [],\n  //     searchField: ''\n  //   }\n  //   console.log('constructor')\n  // }\n  const [robots, setRobots] = useState([]);\n  const [searchField, setSearchField] = useState('');\n  const [count, setCount] = useState(0); // componentDidMount() {\n  //   fetch('https://jsonplaceholder.typicode.com/users')\n  //     .then(response=> response.json())\n  //     .then(users => {this.setState({ robots: users })});\n  //   console.log('componentDidMount');\n  // }\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => setRobots(users));\n    console.log(count);\n  }, [count]);\n\n  const onSearchChange = event => {\n    setSearchField(event.target.value);\n  };\n\n  const filteredRobots = robots.filter(robot => {\n    return robot.name.toLowerCase().includes(searchField.toLowerCase());\n  });\n  return !robots.length ? /*#__PURE__*/_jsxDEV(\"h1\", {\n    className: \"f1\",\n    children: \"Loading!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tc\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"f1\",\n      children: \"RoboFriends\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count + 1),\n      children: \"Open Console & Click Me!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n      searchChange: onSearchChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Scroll, {\n      children: /*#__PURE__*/_jsxDEV(ErrorBoundry, {\n        children: /*#__PURE__*/_jsxDEV(CardList, {\n          robots: filteredRobots\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 7\n  }, this);\n} // once done can run npm run build and will optimize\n// build folder ready for deployment\n\n\n_s(App, \"1r4AZXCiyDutJ8qCvlrIVXCUAUE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/doctorwho/Desktop/redux-robofriends/src/containers/App.js"],"names":["React","useEffect","useState","CardList","SearchBox","Scroll","ErrorBoundry","App","robots","setRobots","searchField","setSearchField","count","setCount","fetch","then","response","json","users","console","log","onSearchChange","event","target","value","filteredRobots","filter","robot","name","toLowerCase","includes","length"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,YAAP,MAAyB,4BAAzB,C,CACA;;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,CAAD,CAAlC,CAZa,CAcb;AACA;AACA;AACA;AACA;AACA;;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,KAAK,IAAIT,SAAS,CAACS,KAAD,CAF1B;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACD,GALQ,EAKN,CAACA,KAAD,CALM,CAAT;;AAOA,QAAMS,cAAc,GAAIC,KAAD,IAAW;AAChCX,IAAAA,cAAc,CAACW,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACD,GAFD;;AAIA,QAAMC,cAAc,GAAGjB,MAAM,CAACkB,MAAP,CAAcC,KAAK,IAAI;AAC5C,WAAOA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCpB,WAAW,CAACmB,WAAZ,EAAlC,CAAP;AACD,GAFsB,CAAvB;AAIA,SAAO,CAACrB,MAAM,CAACuB,MAAR,gBACL;AAAI,IAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADK,gBAGH;AAAK,IAAA,SAAS,EAAC,IAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAE,MAAIlB,QAAQ,CAACD,KAAK,GAAC,CAAP,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,SAAD;AAAW,MAAA,YAAY,EAAES;AAAzB;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,MAAD;AAAA,6BACE,QAAC,YAAD;AAAA,+BACE,QAAC,QAAD;AAAU,UAAA,MAAM,EAAEI;AAAlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UAHJ;AAeC,C,CAGH;AACA;;;GAvDSlB,G;;KAAAA,G;AAwDT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\n// import { robots } from '../robots';\nimport './App.css';\n\nfunction App() {\n  // constructor(){\n  //   super()\n  //   this.state = {\n  //     robots: [],\n  //     searchField: ''\n  //   }\n  //   console.log('constructor')\n  // }\n\n  const [robots, setRobots] = useState([]);\n  const [searchField, setSearchField] = useState('');\n  const [count, setCount] = useState(0);\n\n  // componentDidMount() {\n  //   fetch('https://jsonplaceholder.typicode.com/users')\n  //     .then(response=> response.json())\n  //     .then(users => {this.setState({ robots: users })});\n  //   console.log('componentDidMount');\n  // }\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => setRobots(users));\n    console.log(count)\n  }, [count]);\n\n  const onSearchChange = (event) => {\n    setSearchField(event.target.value);\n  };\n\n  const filteredRobots = robots.filter(robot => {\n    return robot.name.toLowerCase().includes(searchField.toLowerCase());\n  })\n  \n  return !robots.length ?\n    <h1 className='f1'>Loading!</h1> :\n    (\n      <div className=\"tc\">\n        <h1 className=\"f1\">RoboFriends</h1>\n        <button onClick={()=>setCount(count+1)}>Open Console & Click Me!</button>\n        <SearchBox searchChange={onSearchChange} />\n        <Scroll>\n          <ErrorBoundry>\n            <CardList robots={filteredRobots} />\n          </ErrorBoundry>\n        </Scroll>\n      </div>\n    );\n\n  }\n\n\n// once done can run npm run build and will optimize\n// build folder ready for deployment\nexport default App;"]},"metadata":{},"sourceType":"module"}
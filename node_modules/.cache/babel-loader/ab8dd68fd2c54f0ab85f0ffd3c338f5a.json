{"ast":null,"code":"import { CHANGE_SEARCH_FIELD, REQUEST_ROBOTS_FAILED, REQUEST_ROBOTS_PENDING, REQUEST_ROBOTS_SUCCESS } from \"./constants\";\nexport const setSearchField = text => ({\n  type: CHANGE_SEARCH_FIELD,\n  payload: text\n});\nexport const requestRobots = dispatch => {\n  dispatch({\n    type: REQUEST_ROBOTS_PENDING\n  });\n  fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(data => dispatch({\n    type: REQUEST_ROBOTS_SUCCESS,\n    payload: data\n  })).catch(error => dispatch({\n    type: REQUEST_ROBOTS_FAILED,\n    payload: error\n  }));\n};","map":{"version":3,"sources":["/home/doctorwho/Desktop/redux-robofriends/src/actions.js"],"names":["CHANGE_SEARCH_FIELD","REQUEST_ROBOTS_FAILED","REQUEST_ROBOTS_PENDING","REQUEST_ROBOTS_SUCCESS","setSearchField","text","type","payload","requestRobots","dispatch","fetch","then","response","json","data","catch","error"],"mappings":"AAAA,SACEA,mBADF,EAEEC,qBAFF,EAGEC,sBAHF,EAIEC,sBAJF,QAIgC,aAJhC;AAOA,OAAO,MAAMC,cAAc,GAAIC,IAAD,KAAW;AACvCC,EAAAA,IAAI,EAAEN,mBADiC;AAEvCO,EAAAA,OAAO,EAAEF;AAF8B,CAAX,CAAvB;AAKP,OAAO,MAAMG,aAAa,GAAIC,QAAD,IAAc;AACzCA,EAAAA,QAAQ,CAAC;AAAEH,IAAAA,IAAI,EAAEJ;AAAR,GAAD,CAAR;AACAQ,EAAAA,KAAK,CAAC,4CAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,IAAI,IAAIL,QAAQ,CAAC;AAAEH,IAAAA,IAAI,EAAEH,sBAAR;AAAgCI,IAAAA,OAAO,EAAEO;AAAzC,GAAD,CAFxB,EAGGC,KAHH,CAGSC,KAAK,IAAIP,QAAQ,CAAC;AAAEH,IAAAA,IAAI,EAAEL,qBAAR;AAA+BM,IAAAA,OAAO,EAAES;AAAxC,GAAD,CAH1B;AAID,CANM","sourcesContent":["import {\n  CHANGE_SEARCH_FIELD,\n  REQUEST_ROBOTS_FAILED,\n  REQUEST_ROBOTS_PENDING,\n  REQUEST_ROBOTS_SUCCESS } from \"./constants\";\n\n\nexport const setSearchField = (text) => ({\n  type: CHANGE_SEARCH_FIELD,\n  payload: text\n});\n\nexport const requestRobots = (dispatch) => {\n  dispatch({ type: REQUEST_ROBOTS_PENDING });\n  fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(data => dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data }))\n    .catch(error => dispatch({ type: REQUEST_ROBOTS_FAILED, payload: error }))\n};"]},"metadata":{},"sourceType":"module"}